# web/BUILD.bazel - 2 IM√ÅGENES: LOCAL vs GCP
load("@bazel_tools//tools/build_defs/pkg:pkg.bzl", "pkg_tar")
load("@bazel-contrib_rules_python//python:defs.bzl", "py_binary", "py_library")
load("@rules_oci//oci:defs.bzl", "oci_image", "oci_push", "oci_tarball")

py_library(
    name = "web_lib",
    srcs = [
        "app.py",
        "config.py",
        "gunicorn_prod_runner.py",
    ],
    data = glob([
        "templates/**/*.html",
        "static/**/*",
    ]),
    imports = ["."],
    deps = [
        "//core",
        "@pypi//flask",
        "@pypi//python_dotenv",
        "@pypi//unidecode",
        "@pypi//beautifulsoup4",
        "@pypi//gunicorn",
        "@pypi//pytz",
        "@pypi//python_dateutil",
    ],
)

# =================================================================
# 1Ô∏è‚É£ DESARROLLO LOCAL (FLASK)
# =================================================================
py_binary(
    name = "web_dev_server",
    main = "app.py",
    srcs = ["app.py"],
    data = [".env", "biwenger-tools-sa.json"],
    deps = [":web_lib"],
)

# =================================================================
# 2Ô∏è‚É£ CAPAS COMPARTIDAS
# =================================================================
pkg_tar(
    name = "requirements_layer",
    srcs = ["//:requirements_lock.txt"],
    package_dir = "/app",
)

pkg_tar(
    name = "core_layer",
    srcs = ["//core"],
    package_dir = "/app",
)

# Capa base sin secretos
pkg_tar(
    name = "web_base_layer",
    srcs = [
        "app.py",
        "config.py",
        "gunicorn_prod_runner.py",
    ] + glob([
        "templates/**/*.html",
        "static/**/*",
    ]),
    package_dir = "/app/web",
)

# Capa CON service account (solo para local)
pkg_tar(
    name = "web_local_layer",
    srcs = [
        "app.py",
        "config.py", 
        "gunicorn_prod_runner.py",
        "biwenger-tools-sa.json",  # ‚Üê Solo para local
    ] + glob([
        "templates/**/*.html",
        "static/**/*",
    ]),
    package_dir = "/app/web",
)

# =================================================================
# 3Ô∏è‚É£ IMAGEN LOCAL (CON SECRETOS Y SA)
# =================================================================
oci_image(
    name = "web_image_local",
    base = "@python_base_image",
    tars = [":requirements_layer", ":core_layer", ":web_local_layer"],
    env = {
        "PORT": "8080",
        "PYTHONPATH": "/app:/app/web",
        # SECRETOS HARDCODEADOS PARA LOCAL ‚ö†Ô∏è
        "SECRET_KEY": "b8e3a7f0d9c1b5a2e8f4c7d6e3a7f0d9c1b5a2e8f4c7d6e3a7f0d9c1b5a2e8f4",
        "ADMIN_PASSWORD": "LigaVAR#Mochileros",
        "GCP_PROJECT_ID": "biwenger-tools",
        "CLOUD_RUN_JOB_NAME": "biwenger-scraper-data",
        "CLOUD_RUN_REGION": "europe-southwest1",
        "GOOGLE_APPLICATION_CREDENTIALS": "/app/web/biwenger-tools-sa.json",
        # URLs p√∫blicas
        "COMUNICADOS_CSV_URL": "https://drive.google.com/uc?export=download&id=1t6LU3MMSQh7OxmkVwfmMTVS_MiRiaa7C",
        "PARTICIPACION_CSV_URL": "https://drive.google.com/uc?export=download&id=1-jaQX1un9sdSVjFXGo_nhMI6Kf4ArPPm",
        "PALMARES_CSV_URL": "https://drive.google.com/uc?export=download&id=1s1p2SmQIcq-D8pukoStTfAfh5tiYllLK",
        "LIGAS_ESPECIALES_SHEET_ID_25_26": "1ZaFZtKLFc0K4Ku099x3iV20OBkLZz9BEvojZpyOP0es",
        "TROFEOS_SHEET_ID_25_26": "1-ahWDHUby8KRXUZPdJqI302gnNEQTBcr1MQgqJOlk5Y",
        "GDRIVE_FOLDER_ID": "1DEY5pzf0iyZi3uxAFsjnE0tgVf8YiYI7",
    },
    entrypoint = [
        "/bin/sh", "-c",
        "pip install --no-cache-dir -r /app/requirements_lock.txt && cd /app/web && python gunicorn_prod_runner.py"
    ],
)

# =================================================================
# 4Ô∏è‚É£ IMAGEN GCP (SIN SECRETOS NI SA)
# =================================================================
oci_image(
    name = "web_image_gcp",
    base = "@python_base_image",
    tars = [":requirements_layer", ":core_layer", ":web_base_layer"],
    env = {
        "PORT": "8080",
        "PYTHONPATH": "/app:/app/web",
        # SOLO CONFIG P√öBLICA - Los secretos vienen de Secret Manager
        "GCP_PROJECT_ID": "biwenger-tools",
        "CLOUD_RUN_JOB_NAME": "biwenger-scraper-data",
        "CLOUD_RUN_REGION": "europe-southwest1",
        # URLs p√∫blicas
        "COMUNICADOS_CSV_URL": "https://drive.google.com/uc?export=download&id=1t6LU3MMSQh7OxmkVwfmMTVS_MiRiaa7C",
        "PARTICIPACION_CSV_URL": "https://drive.google.com/uc?export=download&id=1-jaQX1un9sdSVjFXGo_nhMI6Kf4ArPPm",
        "PALMARES_CSV_URL": "https://drive.google.com/uc?export=download&id=1s1p2SmQIcq-D8pukoStTfAfh5tiYllLK",
        "LIGAS_ESPECIALES_SHEET_ID_25_26": "1ZaFZtKLFc0K4Ku099x3iV20OBkLZz9BEvojZpyOP0es",
        "TROFEOS_SHEET_ID_25_26": "1-ahWDHUby8KRXUZPdJqI302gnNEQTBcr1MQgqJOlk5Y",
        "GDRIVE_FOLDER_ID": "1DEY5pzf0iyZi3uxAFsjnE0tgVf8YiYI7",
        "GOOGLE_APPLICATION_CREDENTIALS": "/app/web/biwenger-tools-sa.json",
    },
    entrypoint = [
        "/bin/sh", "-c",
        "pip install --no-cache-dir -r /app/requirements_lock.txt && cd /app/web && python gunicorn_prod_runner.py"
    ],
)

# =================================================================
# 5Ô∏è‚É£ COMANDOS PARA LAS 3 OPCIONES
# =================================================================

# OPCI√ìN 1: DESARROLLO LOCAL üè†
# bazel run //web:web_dev_server

# OPCI√ìN 2: DOCKER LOCAL (CON SECRETOS) üê≥
oci_tarball(
    name = "load_image_to_docker_local",
    image = ":web_image_local",
    repo_tags = ["bazel/web:local"],
)
# bazel run //web:load_image_to_docker_local
# docker run --rm -p 8080:8080 bazel/web:local

# OPCI√ìN 3: SUBIR A GCP (SIN SECRETOS) ‚òÅÔ∏è
oci_push(
    name = "push_image_to_gcp",
    image = ":web_image_gcp",  # ‚Üê Imagen limpia sin secretos
    repository = "europe-southwest1-docker.pkg.dev/biwenger-tools/biwenger-docker/web",
    remote_tags = ["latest"],
)
# bazel run //web:push_image_to_gcp

# =================================================================
# 6Ô∏è‚É£ COMANDOS ADICIONALES (OPCIONALES)
# =================================================================

# Docker local con imagen limpia (para probar GCP localmente)
oci_tarball(
    name = "load_image_to_docker_clean", 
    image = ":web_image_gcp",
    repo_tags = ["bazel/web:clean"],
)
# bazel run //web:load_image_to_docker_clean
# docker run --rm -p 8080:8080 -e SECRET_KEY=test -e ADMIN_PASSWORD=test bazel/web:clean

# =================================================================
# 7Ô∏è‚É£ TESTS UNITARIOS (PYTEST)
# =================================================================
py_test(
    name = "web_tests",
    timeout = "short",
    main = "tests/main.py",
    srcs = glob(["tests/**/*.py"]), # Recoge todos los archivos de test en la carpeta tests/
    data = [
        "biwenger-tools-sa.json",
        ".env",
    ],
    deps = [
        ":web_lib",             # Dependencia a tu c√≥digo principal de la web
        "@pypi//pytest",        # Dependencia a la librer√≠a pytest
        "@pypi//flask",         # Flask es necesario para el test_client
    ],
)